#cloud-config

users:
  - name: arcblock
    groups: users, admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIReplaceWithYourActualEd25519PublicKey your-email@example.com

packages:
  - curl
  - wget
  - git
  - fail2ban
  - ufw
  - podman
  - python3
  - python3-pip

package_update: true
package_upgrade: true

write_files:
  - path: /home/arcblock/blocklet-server/compose.yaml
    content: |
      version: '3.8'
      services:
        blocklet-server:
          image: arcblock/blocklet-server:latest
          container_name: blocklet-server
          restart: unless-stopped
          ports:
            - "8089:8089"
            - "80:80"
            - "443:443"
          volumes:
            - blocklet-data:/opt/abtnode/data
            - blocklet-config:/opt/abtnode/config
          environment:
            - ABT_NODE_LOG_LEVEL=info
            - ABT_NODE_ENV=production
            - ABT_NODE_HOST=0.0.0.0
            - ABT_NODE_PORT=8089
          healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8089/api/did"]
            interval: 30s
            timeout: 10s
            retries: 3
      volumes:
        blocklet-data:
        blocklet-config:
    owner: arcblock:arcblock
    permissions: '0644'

  - path: /etc/systemd/system/blocklet-server.service
    content: |
      [Unit]
      Description=Arcblock Blocklet Server
      After=network-online.target
      Wants=network-online.target
      RequiresMountsFor=/home/arcblock
      
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      User=arcblock
      Group=arcblock
      WorkingDirectory=/home/arcblock/blocklet-server
      Environment=XDG_RUNTIME_DIR=/run/user/1000
      ExecStartPre=/usr/bin/podman compose down --remove-orphans
      ExecStart=/usr/bin/podman compose up -d
      ExecStop=/usr/bin/podman compose down --timeout 30
      TimeoutStartSec=300
      TimeoutStopSec=120
      
      [Install]
      WantedBy=multi-user.target
    owner: root:root
    permissions: '0644'

  - path: /etc/fail2ban/jail.local
    content: |
      [DEFAULT]
      bantime = 3600
      findtime = 600
      maxretry = 5
      
      [sshd]
      enabled = true
      port = 2222
      banaction = iptables-multiport
    owner: root:root
    permissions: '0644'

  - path: /tmp/ssh-config.txt
    content: |
      Port 2222
      Protocol 2
      PermitRootLogin no
      PasswordAuthentication no
      PubkeyAuthentication yes
      MaxAuthTries 3
      X11Forwarding no
      AllowTcpForwarding no
      ClientAliveInterval 300
      ClientAliveCountMax 2
      AllowUsers arcblock
    owner: root:root
    permissions: '0644'

  - path: /home/arcblock/setup-post-install.sh
    content: |
      #!/bin/bash
      set -e
      
      echo "Starting post-installation setup..."
      
      # Configure Podman for rootless
      echo 'arcblock:100000:65536' >> /etc/subuid
      echo 'arcblock:100000:65536' >> /etc/subgid
      loginctl enable-linger arcblock
      
      # Setup Podman socket
      sudo -u arcblock systemctl --user enable podman.socket
      sudo -u arcblock systemctl --user start podman.socket
      
      # Install Blocklet CLI
      sudo -u arcblock npm install -g @arcblock/cli
      
      # Pull container image
      sudo -u arcblock podman pull arcblock/blocklet-server:latest
      
      # Configure SSH
      cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup
      cp /tmp/ssh-config.txt /etc/ssh/sshd_config
      
      # Configure firewall
      ufw --force reset
      ufw default deny incoming
      ufw default allow outgoing
      ufw allow 2222/tcp
      ufw allow 8089/tcp
      ufw allow 80/tcp
      ufw allow 443/tcp
      ufw --force enable
      
      # Start services
      systemctl enable fail2ban
      systemctl start fail2ban
      systemctl daemon-reload
      systemctl enable blocklet-server
      systemctl start blocklet-server
      
      # Wait for service
      echo "Waiting for Blocklet Server to become ready..."
      for i in {1..24}; do
        if curl -sf http://localhost:8089/api/did >/dev/null 2>&1; then
          echo "Blocklet Server is ready!"
          break
        fi
        echo "Attempt $i/24 - waiting 15 seconds..."
        sleep 15
      done
      
      # Restart SSH
      systemctl restart ssh
      
      # Clean up
      rm -f /tmp/ssh-config.txt
      
      echo "Setup completed at $(date)" > /home/arcblock/setup-complete.log
      echo "Post-installation setup completed successfully!"
    owner: root:root
    permissions: '0755'

runcmd:
  - mkdir -p /home/arcblock/blocklet-server
  - chown -R arcblock:arcblock /home/arcblock
  
  # Install Node.js LTS
  - curl -fsSL https://deb.nodesource.com/setup_lts.x -o /tmp/nodesource_setup.sh
  - bash /tmp/nodesource_setup.sh
  - apt-get install -y nodejs
  
  # Install podman-compose
  - pip3 install podman-compose
  
  # Run post-installation setup
  - /home/arcblock/setup-post-install.sh
  
  # Final verification
  - systemctl is-active --quiet blocklet-server || echo "WARNING Service may still be starting"
  
  # Create completion marker
  - touch /home/arcblock/.setup-complete
  - chown arcblock:arcblock /home/arcblock/.setup-complete

timezone: UTC
hostname: blocklet-server
package_reboot_if_required: false

final_message: |
  Arcblock Blocklet Server setup completed!
  
  Access Information:
  - SSH: ssh -p 2222 arcblock@YOUR_SERVER_IP
  - Web Interface: http://YOUR_SERVER_IP:8089
  - Service Status: systemctl status blocklet-server
  - Container Status: sudo -u arcblock podman ps
  
  Setup completed successfully!